package mapreduce.demo.task3;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.*;

public class Task3Mapper extends Mapper<LongWritable, Text, IntWritable, IntWritable> {
	
	IntWritable month;
	IntWritable temp;

	@Override
	public void setup(Context context) {
		month = new IntWritable();
		temp = new IntWritable();
	}

	@Override
	public void map(LongWritable key, Text value, Context context) 
			throws IOException, InterruptedException {
		String[] lineArray = value.toString().split(",");
	
		month.set(Integer.parseInt(lineArray[0].split("-")[1]));
		temp.set(Integer.parseInt(lineArray[2]));
	
		context.write(month, temp);
	}
}

package mapreduce.demo.task3;

import java.io.IOException;

import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.mapreduce.Reducer;

public class Task3Reducer extends Reducer<IntWritable, IntWritable, IntWritable, IntWritable>
{	
	IntWritable maxVal;
	
	@Override
	public void setup(Context context) {
		maxVal = new IntWritable();
	}
	
	@Override
	public void reduce(IntWritable key, Iterable<IntWritable> values,Context context) throws IOException, InterruptedException
	{
		int maxValue = Integer.MIN_VALUE;
		
		for (IntWritable value : values) {
			if (value.get() > maxValue) {
				maxValue = value.get();
			}
		}
		
		maxVal.set(maxValue);
		context.write(key, maxVal);
	}
}
